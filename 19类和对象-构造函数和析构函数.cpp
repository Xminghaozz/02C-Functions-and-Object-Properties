#include <iostream>
using namespace std;

//对象的初始化和清理
//1、构造函数来进行初始化
class Person
{
public:
	//1构造函数
	/*没有返回值，不用写void
	函数名与类名相同
	构造函数可以有参数，可以发生重载
	创建对象的时候，构造函数会自动调用，而且只调用一次*/
	Person()
	{
		cout << "构造函数的调用" << endl;
	}

	//2、析构函数进行清理操作
	/*没有返回值，不用写void
	函数名与类名相同,要在名称前面加~
	构造函数可以有参数，可以发生重载
	对象在销毁前，会自动调用析构函数，而且只调用一次*/
	~Person()
	{
		cout << "析构函数的调用" << endl;
	}
};


//构造和析构函数都是必须要实现，如果我们自己不提供，编译器会提供空实现的构造和析构函数
void test01()
{
	Person p1;//局部变量，在栈上的数据，test01执行完成后，就会销毁这个对象，所以会调用析构函数
}

int main()
{
	test01();
	//Person p1;//main函数结束后才会调用析构函数
	system("pause");
	return 0;
}